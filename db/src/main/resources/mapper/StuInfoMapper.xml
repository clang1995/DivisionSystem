<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szy.db.mapper.StuInfoMapper">

    <insert id="insertStudentInfo" parameterType="com.szy.db.model.StudentInfoDbo">
        INSERT INTO t_student_info(number, name, telephone, category, originalClass, presentClass, sex, dorm, note, GPA, realGPA, stuFrom, division, entranceScore, admissionScore, gradeOne, gradeTwo, totalGrade, rank, createUser, createTime)
        VALUES (#{number}, #{name}, #{telephone}, #{category}, #{originalClass}, #{presentClass}, #{sex}, #{dorm}, #{note}, #{GPA}, #{realGPA}, #{stuFrom}, #{division}, #{entranceScore}, #{admissionScore}, #{gradeOne}, #{gradeTwo}, #{totalGrade}, #{rank}, #{createUser}, from_unixtime(#{createTime}))
        ON duplicate KEY UPDATE name = #{name}, telephone = #{telephone}, category = #{category}, originalClass = #{originalClass}, presentClass = #{presentClass}, sex = #{sex}, dorm = #{dorm},note = #{note}, GPA = #{GPA},realGPA = #{realGPA},stuFrom = #{stuFrom},division = #{division},entranceScore = #{entranceScore},admissionScore = #{admissionScore},gradeOne = #{gradeOne},gradeTwo = #{gradeTwo},totalGrade = #{totalGrade},rank = #{rank},updateTime = from_unixtime(#{updateTime})
    </insert>

    <select id="selectStudentInfoByNumber" parameterType="long" resultType="com.szy.db.model.StudentInfoDbo">
        SELECT number, name,
               telephone,
               category,
               originalClass,
               presentClass,
               sex,
               dorm,
               note,
               GPA,
               realGPA,
               stuFrom,
               division,
               entranceScore,
               admissionScore,
               gradeOne,
               gradeTwo,
               totalGrade,
               rank,
               CREATEUSER,
               createTime,
               updateTime,
               status
        FROM t_student_info
        WHERE number = #{number}
    </select>
    
    <select id="selectStudentInfoList" parameterType="com.szy.db.model.GetStuInfoItems" resultType="com.szy.db.model.StudentInfoDbo">
        SELECT
            number,
            name,
            telephone,
            category,
            originalClass,
            presentClass,
            sex,
            dorm,
            note,
            GPA,
            realGPA,
            stuFrom,
            division,
            entranceScore,
            admissionScore,
            gradeOne,
            gradeTwo,
            totalGrade,
            rank,
            createUser,
            createTime,
            updateTime,
            status
        FROM t_student_info
        <where>
            <choose>
                <when test="status != 0">
                    status = #{status}
                </when>
                <otherwise>
                    status > 0
                </otherwise>
            </choose>
            <if test="name != null">
                AND name LIKE '%${name}%'
            </if>
            <if test="originalClass != null">
                AND originalClass LIKE '%${originalClass}%'
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="division != 0">
                AND division = #{division}
            </if>
            <if test="stuFrom != null">
                AND stuFrom LIKE '%${stuFrom}%'
            </if>
            <if test="startCreateTime != 0 and endCreateTime != 0">
                AND unix_timestamp(createTime) between #{startCreateTime} and #{endCreateTime}
            </if>
            <if test="startUpdateTime != 0 and endUpdateTime != 0">
                AND unix_timestamp(updateTime) between #{startUpdateTime} and #{endUpdateTime}
            </if>
        </where>
        <if test="item != null and sort !=null">
            <if test="sort == 'desc'">
                ORDER BY ${item} DESC
            </if>
            <if test="sort == 'asc'">
                ORDER BY ${item} ASC
            </if>
        </if>
        limit #{from},#{size}
    </select>

    <select id="selectStudentInfoListTotal" parameterType="com.szy.db.model.GetStuInfoItems" resultType="int">
        SELECT count(*) FROM t_student_info
        <where>
            <choose>
                <when test="status != 0">
                    status = #{status}
                </when>
                <otherwise>
                    status > 0
                </otherwise>
            </choose>
            <if test="name != null">
                AND name LIKE '%${name}%'
            </if>
            <if test="originalClass != null">
                AND originalClass LIKE '%${originalClass}%'
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="division != 0">
                AND division = #{division}
            </if>
            <if test="stuFrom != null">
                AND stuFrom LIKE '%${stuFrom}%'
            </if>
            <if test="startCreateTime != 0 and endCreateTime != 0">
                AND unix_timestamp(createTime) between #{startCreateTime} and #{endCreateTime}
            </if>
            <if test="startUpdateTime != 0 and endUpdateTime != 0">
                AND unix_timestamp(updateTime) between #{startUpdateTime} and #{endUpdateTime}
            </if>
        </where>
    </select>

    <insert id="insertChoose" parameterType="com.szy.db.model.ChooseDbo">
        INSERT INTO t_choose(number,major) VALUES (#{number}, #{major})
    </insert>

</mapper>