<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szy.db.mapper.StuInfoMapper">

    <insert id="insertStudentInfo" parameterType="com.szy.db.model.StudentInfoDbo">
        INSERT INTO t_student_info(number, name, telephone, grade, category, originalClass, newClass,newMajor, sex, dorm, note, GPA, realGPA, stuFrom, division, entranceScore, admissionScore, gradeOne, gradeTwo, totalGrade, rank, createUser, createTime)
        VALUES (#{number}, #{name}, #{telephone}, #{grade}, #{category}, #{originalClass}, #{newClass},#{newMajor}, #{sex}, #{dorm}, #{note}, #{GPA}, #{realGPA}, #{stuFrom}, #{division}, #{entranceScore}, #{admissionScore}, #{gradeOne}, #{gradeTwo}, #{totalGrade}, #{rank}, #{createUser}, from_unixtime(#{createTime}))
        ON duplicate KEY UPDATE name = #{name}, telephone = #{telephone}, grade = #{grade},category = #{category}, originalClass = #{originalClass}, newClass = #{newClass},newMajor = #{newMajor}, sex = #{sex}, dorm = #{dorm},note = #{note}, GPA = #{GPA},realGPA = #{realGPA},stuFrom = #{stuFrom},division = #{division},entranceScore = #{entranceScore},admissionScore = #{admissionScore},gradeOne = #{gradeOne},gradeTwo = #{gradeTwo},totalGrade = #{totalGrade},rank = #{rank},updateTime = from_unixtime(#{updateTime})
    </insert>

    <update id="updateGrade" parameterType="com.szy.db.model.StudentInfoDbo">
        update t_student_info set realGPA = #{realGPA}, gradeOne = #{gradeOne}, gradeTwo = #{gradeTwo}, totalGrade = #{totalGrade}
        where number = #{number}
    </update>

    <update id="updateRank" parameterType="com.szy.db.model.StudentInfoDbo">
        update t_student_info set rank = #{rank}
        where number = #{number}
    </update>

    <update id="updatePhone" parameterType="com.szy.db.model.UpdatePhoneDbo">
        UPDATE t_student_info SET telephone = #{telePhone} WHERE number = #{number}
    </update>

    <select id="selectStudentInfoByNumber" parameterType="long" resultType="com.szy.db.model.StudentInfoQueryDbo">
        SELECT
            a.number,
            a.name,
            a.telephone,
            c.name as category,
            a.category as categoryId,
            a.grade as gradeId,
            d.name as grade,
            originalClass,
            a.newClass as newClassId,
            e.name as newClass,
            a.newMajor as newMajorId,
            g.name as newMajor,
            sex,
            dorm,
            note,
            GPA,
            realGPA,
            stuFrom,
            division,
            entranceScore,
            admissionScore,
            gradeOne,
            gradeTwo,
            totalGrade,
            rank,
            b.name as createUser,
            unix_timestamp(a.createTime) as createTime,
            unix_timestamp(a.updateTime) as updateTime,
            a.status as status
        FROM t_student_info a
            LEFT JOIN t_user b on a.createUser = b.number
            LEFT JOIN t_category c on a.category = c.id
            LEFT JOIN t_grade d on a.grade = d.id
            LEFT JOIN t_new_class e on a.newClass = e.id
            LEFT JOIN t_new_major f on a.newMajor = f.id
            LEFT JOIN t_major g on f.major = g.id
        WHERE a.number = #{number}
    </select>
    
    <select id="selectStudentInfoList" parameterType="com.szy.db.model.GetStuInfoItems" resultType="com.szy.db.model.StudentInfoQueryDbo">
        SELECT
            a.number,
            a.name,
            a.telephone,
            c.name as category,
            a.category as categoryId,
            a.grade as gradeId,
            d.name as grade,
            originalClass,
            a.newClass as newClassId,
            e.name as newClass,
            a.newMajor as newMajorId,
            g.name as newMajor,
            sex,
            dorm,
            note,
            GPA,
            realGPA,
            stuFrom,
            division,
            entranceScore,
            admissionScore,
            gradeOne,
            gradeTwo,
            totalGrade,
            rank,
            b.name as createUser,
            unix_timestamp(a.createTime) as createTime,
            unix_timestamp(a.updateTime) as updateTime,
            a.status as status
        FROM t_student_info a
            LEFT JOIN t_user b on a.createUser = b.number
            LEFT JOIN t_category c on a.category = c.id
            LEFT JOIN t_grade d on a.grade = d.id
            LEFT JOIN t_new_class e on a.newClass = e.id
            LEFT JOIN t_new_major f on a.newMajor = f.id
            LEFT JOIN t_major g on f.major = g.id
        <where>
            <choose>
                <when test="status != 0">
                    a.status = #{status}
                </when>
                <otherwise>
                    a.status > 0
                </otherwise>
            </choose>
            <if test="number != 0">
                AND a.number = #{number}
            </if>
            <if test="grade != 0">
                AND a.grade = #{grade}
            </if>
            <if test="category != 0">
                AND a.category = #{category}
            </if>
            <if test="name != null">
                AND a.name LIKE '%${name}%'
            </if>
            <if test="originalClass != null">
                AND originalClass LIKE '%${originalClass}%'
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="division != 0">
                AND division = #{division}
            </if>
            <if test="stuFrom != null">
                AND stuFrom LIKE '%${stuFrom}%'
            </if>
        </where>
        <if test="item != null and sort !=null">
            <if test="sort == 'desc'">
                ORDER BY a.${item} DESC
            </if>
            <if test="sort == 'asc'">
                ORDER BY a.${item} ASC
            </if>
        </if>
        limit #{from},#{size}
    </select>

    <select id="selectStudentInfoListTotal" parameterType="com.szy.db.model.GetStuInfoItems" resultType="int">
        SELECT count(*) FROM t_student_info
        <where>
            <choose>
                <when test="status != 0">
                    status = #{status}
                </when>
                <otherwise>
                    status > 0
                </otherwise>
            </choose>
            <if test="number != 0">
                AND number = #{number}
            </if>
            <if test="grade != 0">
                AND grade = #{grade}
            </if>
            <if test="category != 0">
                AND category = #{category}
            </if>
            <if test="name != null">
                AND name LIKE '%${name}%'
            </if>
            <if test="originalClass != null">
                AND originalClass LIKE '%${originalClass}%'
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="division != 0">
                AND division = #{division}
            </if>
            <if test="stuFrom != null">
                AND stuFrom LIKE '%${stuFrom}%'
            </if>
        </where>
    </select>

    <insert id="insertChoose" parameterType="com.szy.db.model.ChooseDbo">
        INSERT INTO t_choose(number,major) VALUES (#{number}, #{major})
    </insert>

    <update id="updateUserAccountStatus" parameterType="com.szy.db.model.UpdateUserLimitDbo">
        UPDATE t_student_info set `limit` = #{status} WHERE number = #{number}
    </update>

    <update id="updateNewClass" parameterType="com.szy.db.model.StudentInfoDbo">
        update t_student_info set newMajor = #{newMajor}, newClass = #{newClass} where `number` = #{number}
    </update>

</mapper>