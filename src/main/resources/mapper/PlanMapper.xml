<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szy.db.mapper.PlanMapper">

    <!--分流计划-->
    <insert id="insertPlan" parameterType="com.szy.db.model.PlanDbo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_plan(
            grade,
            category,
            studentAmount,
            majorAmount,
            details,
            createTime,
            updateTime,
            remarks)
        VALUES (
            #{grade},
            #{category},
            #{studentAmount},
            #{majorAmount},
            #{details},
            from_unixtime(#{createTime}),
            from_unixtime(#{updateTime}),
            #{remarks})
    </insert>

    <select id="selectPlans" parameterType="com.szy.db.model.GetPlanItems" resultType="com.szy.db.model.PlanDbo">
        SELECT
            id,
            grade,
            category,
            studentAmount,
            majorAmount,
            details,
            unix_timestamp(createTime) as createTime,
            unix_timestamp(updateTime) as updateTime,
            remarks
        FROM t_plan
        <where>
            <choose>
                <when test="status != 0">
                    status = #{status}
                </when>
                <otherwise>
                    status > 0
                </otherwise>
            </choose>
            <if test="grade != 0">
                AND grade LIKE '%${grade}%'
            </if>
            <if test="category != 0">
                AND category LIKE '%${category}%'
            </if>
            <if test="startCreateTime != 0 and endCreateTime != 0">
                AND unix_timestamp(createTime) between #{startCreateTime} and #{endCreateTime}
            </if>
            <if test="startUpdateTime != 0 and endUpdateTime != 0">
                AND unix_timestamp(updateTime) between #{startUpdateTime} and #{endUpdateTime}
            </if>
        </where>
        <if test="item != null and sort !=null">
            <if test="sort == 'desc'">
                ORDER BY ${item} DESC
            </if>
            <if test="sort == 'asc'">
                ORDER BY ${item} ASC
            </if>
        </if>
        limit #{from},#{size}
    </select>

    <select id="selectPlanDetals" resultType="com.szy.db.model.PlanDbo">
        SELECT id,
            grade,
            category,
            studentAmount,
            majorAmount,
            details,
            unix_timestamp(createTime),
            unix_timestamp(updateTime),
            remarks
        FROM t_plan WHERE id = #{0} AND status > 0
    </select>

    <select id="selectPlansTotal" parameterType="com.szy.db.model.GetPlanItems" resultType="int">
        SELECT count(*) FROM t_plan <where>
        <choose>
            <when test="status != 0">
                status = #{status}
            </when>
            <otherwise>
                status > 0
            </otherwise>
        </choose>
        <if test="grade != 0">
            AND grade LIKE '%${grade}%'
        </if>
        <if test="category != 0">
            AND category LIKE '%${category}%'
        </if>
        <if test="startCreateTime != 0 and endCreateTime != 0">
            AND unix_timestamp(createTime) between #{startCreateTime} and #{endCreateTime}
        </if>
        <if test="startUpdateTime != 0 and endUpdateTime != 0">
            AND unix_timestamp(updateTime) between #{startUpdateTime} and #{endUpdateTime}
        </if>
    </where>
    </select>

    <update id="deletePlan" parameterType="int">
        UPDATE t_plan SET status = -1 WHERE id = #{0}
    </update>

    <update id="updatePlan" parameterType="com.szy.db.model.PlanDbo">
        UPDATE t_plan
        <set>
            grade = #{grade},
            category = #{category},
            studentAmount = #{studentAmount},
            majorAmount = #{majorAmount},
            details = #{details},
            remarks = #{remarks},
            updateTime = from_unixtime(#{updateTime})
        </set>
        WHERE id = #{id}
    </update>

</mapper>