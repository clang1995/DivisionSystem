<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szy.db.mapper.VolunteerMapper">

    <insert id="insertVolunteer" parameterType="com.szy.db.model.VolunteerDbo">
       INSERT INTO t_volunteer(
           number,
           firstChoose,
           secondChoose,
           thirdChoose,
           createTime)
       VALUES(
           #{number},
           #{firstChoose},
           #{secondChoose},
           #{thirdChoose},
           from_unixtime(#{createTime}))
       on duplicate key update
           firstChoose = #{firstChoose},
           secondChoose = #{secondChoose},
           thirdChoose = #{thirdChoose},
           updateTime = from_unixtime(#{updateTime})
   </insert>

    <delete id="deleteVolunteer" parameterType="long">
        UPDATE t_volunteer SET status = -1 WHERE number = #{0}
    </delete>

    <select id="selectVolunteerByNumber" parameterType="long" resultType="com.szy.db.model.VolunteerQueryDbo">
        SELECT
          number,
          firstChoose as firstChooseId,
          b.name as firstChoose,
          secondChoose as secondChooseId,
          c.name as secondChoose,
          thirdChoose as thirdChooseId,
          d.name as thirdChoose,
          unix_timestamp(a.createTime) as createTime,
          unix_timestamp(a.updateTime) as updateTime,
          a.status
        FROM t_volunteer a
          LEFT JOIN t_major b on a.firstChoose = b.id
          LEFT JOIN t_major c on a.secondChoose = c.id
          LEFT JOIN t_major d on a.thirdChoose = d.id
        WHERE a.number = #{0}
    </select>

    <select id="selectVolunteerList" parameterType="com.szy.db.model.GetVolunteerItems" resultType="com.szy.db.model.VolunteerQueryDbo">
        SELECT
            a.number,
            e.name as name,
            firstChoose as firstChooseId,
            b.name as firstChoose,
            secondChoose as secondChooseId,
            c.name as secondChoose,
            thirdChoose as thirdChooseId,
            d.name as thirdChoose,
            unix_timestamp(a.createTime) as createTime,
            unix_timestamp(a.updateTime) as updateTime,
            a.status
        FROM t_volunteer a
        JOIN t_major b on a.firstChoose = b.id
        JOIN t_major c on a.secondChoose = c.id
        JOIN t_major d on a.thirdChoose = d.id
        JOIN t_student_info e on a.number = e.number
        <where>
            a.status > 0
            <if test="number != 0">
                AND a.number = #{number}
            </if>
            <if test="firstChoose != 0">
                AND a.firstChoose = #{firstChoose}
            </if>
            <if test="secondChoose != 0">
                AND a.secondChoose = #{secondChoose}
            </if>
            <if test="thirdChoose != 0">
                AND a.thirdChoose = #{thirdChoose}
            </if>
            <if test="grade != 0">
                AND e.grade = #{grade}
            </if>
            <if test="category != 0">
                AND e.category = #{category}
            </if>
            <if test="name != null">
                AND e.name LIKE concat(concat('%',#{name}),'%')
            </if>
            <if test="originalClass != null">
                AND e.originalClass LIKE concat(concat('%',#{originalClass}),'%')
            </if>
            <if test="sex != null">
                AND e.sex = #{sex}
            </if>
            <if test="division != 0">
                AND e.division = #{division}
            </if>
            <if test="stuFrom != null">
                AND e.stuFrom LIKE concat(concat('%',#{stuFrom}),'%')
            </if>
        </where>
        <if test="item != null and sort !=null">
            <if test="sort == 'desc'">
                ORDER BY a.${item} DESC
            </if>
            <if test="sort == 'asc'">
                ORDER BY a.${item} ASC
            </if>
        </if>
        limit #{from},#{size}
    </select>

    <select id="selectVolunteerListTotal" parameterType="com.szy.db.model.GetVolunteerItems" resultType="int">
        SELECT count(*) FROM t_volunteer a LEFT JOIN t_student_info e ON a.number = e.number
        <where>
            a.status > 0
            <if test="number != 0">
                AND a.number = #{number}
            </if>
            <if test="firstChoose != 0">
                AND a.firstChoose = #{firstChoose}
            </if>
            <if test="secondChoose != 0">
                AND a.secondChoose = #{secondChoose}
            </if>
            <if test="thirdChoose != 0">
                AND a.thirdChoose = #{thirdChoose}
            </if>
            <if test="grade != 0">
                AND e.grade = #{grade}
            </if>
            <if test="category != 0">
                AND e.category = #{category}
            </if>
            <if test="name != null">
                AND e.name LIKE concat(concat('%',#{name}),'%')
            </if>
            <if test="originalClass != null">
                AND e.originalClass LIKE concat(concat('%',#{originalClass}),'%')
            </if>
            <if test="sex != null">
                AND e.sex = #{sex}
            </if>
            <if test="division != 0">
                AND e.division = #{division}
            </if>
            <if test="stuFrom != null">
                AND e.stuFrom LIKE concat(concat('%',#{stuFrom}),'%')
            </if>
        </where>
    </select>

    <update id="updateVolunteerCommitStatus" parameterType="com.szy.db.model.VolunteerDbo">
        UPDATE t_volunteer SET status = #{status}, commitTime = #{commitTime} WHERE number = #{number}
    </update>

</mapper>